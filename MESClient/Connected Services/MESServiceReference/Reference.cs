//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MESClient.MESServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MESServer")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Department ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.ProductAvailability[] ProductAvailabilitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Department Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.ProductAvailability[] ProductAvailabilities {
            get {
                return this.ProductAvailabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAvailabilitiesField, value) != true)) {
                    this.ProductAvailabilitiesField = value;
                    this.RaisePropertyChanged("ProductAvailabilities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductAvailability", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class ProductAvailability : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Product ProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.ProductAvailability[] ProductAvailabilitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.ProductAvailability[] ProductAvailabilities {
            get {
                return this.ProductAvailabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAvailabilitiesField, value) != true)) {
                    this.ProductAvailabilitiesField = value;
                    this.RaisePropertyChanged("ProductAvailabilities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Team", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class Team : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Employee LeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Employee Leader {
            get {
                return this.LeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderField, value) != true)) {
                    this.LeaderField = value;
                    this.RaisePropertyChanged("Leader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.EmployeeCategory EmployeeCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.EmployeeCategory EmployeeCategory {
            get {
                return this.EmployeeCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCategoryField, value) != true)) {
                    this.EmployeeCategoryField = value;
                    this.RaisePropertyChanged("EmployeeCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeCategory", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class EmployeeCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movement", Namespace="http://schemas.datacontract.org/2004/07/MESModel")]
    [System.SerializableAttribute()]
    public partial class Movement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Department DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MovementDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Department SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MESClient.MESServiceReference.Team TeamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Department Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MovementDate {
            get {
                return this.MovementDateField;
            }
            set {
                if ((this.MovementDateField.Equals(value) != true)) {
                    this.MovementDateField = value;
                    this.RaisePropertyChanged("MovementDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Department Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MESClient.MESServiceReference.Team Team {
            get {
                return this.TeamField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamField, value) != true)) {
                    this.TeamField = value;
                    this.RaisePropertyChanged("Team");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MESServiceReference.IMESService")]
    public interface IMESService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetData", ReplyAction="http://tempuri.org/IMESService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetData", ReplyAction="http://tempuri.org/IMESService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMESService/GetDataUsingDataContractResponse")]
        MESClient.MESServiceReference.CompositeType GetDataUsingDataContract(MESClient.MESServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMESService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.CompositeType> GetDataUsingDataContractAsync(MESClient.MESServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDiff", ReplyAction="http://tempuri.org/IMESService/GetDiffResponse")]
        int GetDiff(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDiff", ReplyAction="http://tempuri.org/IMESService/GetDiffResponse")]
        System.Threading.Tasks.Task<int> GetDiffAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDepartments", ReplyAction="http://tempuri.org/IMESService/GetDepartmentsResponse")]
        MESClient.MESServiceReference.Department[] GetDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDepartments", ReplyAction="http://tempuri.org/IMESService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.Department[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDepartmentAvailability", ReplyAction="http://tempuri.org/IMESService/GetDepartmentAvailabilityResponse")]
        MESClient.MESServiceReference.ProductAvailability[] GetDepartmentAvailability(MESClient.MESServiceReference.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetDepartmentAvailability", ReplyAction="http://tempuri.org/IMESService/GetDepartmentAvailabilityResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.ProductAvailability[]> GetDepartmentAvailabilityAsync(MESClient.MESServiceReference.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetProducts", ReplyAction="http://tempuri.org/IMESService/GetProductsResponse")]
        MESClient.MESServiceReference.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetProducts", ReplyAction="http://tempuri.org/IMESService/GetProductsResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetTeams", ReplyAction="http://tempuri.org/IMESService/GetTeamsResponse")]
        MESClient.MESServiceReference.Team[] GetTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetTeams", ReplyAction="http://tempuri.org/IMESService/GetTeamsResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.Team[]> GetTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/AddProduct", ReplyAction="http://tempuri.org/IMESService/AddProductResponse")]
        int AddProduct(int productId, int departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/AddProduct", ReplyAction="http://tempuri.org/IMESService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(int productId, int departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/DeleteProduct", ReplyAction="http://tempuri.org/IMESService/DeleteProductResponse")]
        int DeleteProduct(int productAvailabilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/DeleteProduct", ReplyAction="http://tempuri.org/IMESService/DeleteProductResponse")]
        System.Threading.Tasks.Task<int> DeleteProductAsync(int productAvailabilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/DeleteProducts", ReplyAction="http://tempuri.org/IMESService/DeleteProductsResponse")]
        int DeleteProducts(int[] productIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/DeleteProducts", ReplyAction="http://tempuri.org/IMESService/DeleteProductsResponse")]
        System.Threading.Tasks.Task<int> DeleteProductsAsync(int[] productIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/TakeProduct", ReplyAction="http://tempuri.org/IMESService/TakeProductResponse")]
        int TakeProduct(int productAvailabilityId, int teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/TakeProduct", ReplyAction="http://tempuri.org/IMESService/TakeProductResponse")]
        System.Threading.Tasks.Task<int> TakeProductAsync(int productAvailabilityId, int teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/TakeProducts", ReplyAction="http://tempuri.org/IMESService/TakeProductsResponse")]
        int TakeProducts(int[] productIds, int teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/TakeProducts", ReplyAction="http://tempuri.org/IMESService/TakeProductsResponse")]
        System.Threading.Tasks.Task<int> TakeProductsAsync(int[] productIds, int teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetInputMovements", ReplyAction="http://tempuri.org/IMESService/GetInputMovementsResponse")]
        MESClient.MESServiceReference.Movement[] GetInputMovements(MESClient.MESServiceReference.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetInputMovements", ReplyAction="http://tempuri.org/IMESService/GetInputMovementsResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.Movement[]> GetInputMovementsAsync(MESClient.MESServiceReference.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetOutputMovements", ReplyAction="http://tempuri.org/IMESService/GetOutputMovementsResponse")]
        MESClient.MESServiceReference.Movement[] GetOutputMovements(MESClient.MESServiceReference.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GetOutputMovements", ReplyAction="http://tempuri.org/IMESService/GetOutputMovementsResponse")]
        System.Threading.Tasks.Task<MESClient.MESServiceReference.Movement[]> GetOutputMovementsAsync(MESClient.MESServiceReference.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GiveProduct", ReplyAction="http://tempuri.org/IMESService/GiveProductResponse")]
        int GiveProduct(int[] productAvailabilityIds, int teamId, int newProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/GiveProduct", ReplyAction="http://tempuri.org/IMESService/GiveProductResponse")]
        System.Threading.Tasks.Task<int> GiveProductAsync(int[] productAvailabilityIds, int teamId, int newProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/InitDb", ReplyAction="http://tempuri.org/IMESService/InitDbResponse")]
        string InitDb();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMESService/InitDb", ReplyAction="http://tempuri.org/IMESService/InitDbResponse")]
        System.Threading.Tasks.Task<string> InitDbAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMESServiceChannel : MESClient.MESServiceReference.IMESService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MESServiceClient : System.ServiceModel.ClientBase<MESClient.MESServiceReference.IMESService>, MESClient.MESServiceReference.IMESService {
        
        public MESServiceClient() {
        }
        
        public MESServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MESServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MESServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MESServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MESClient.MESServiceReference.CompositeType GetDataUsingDataContract(MESClient.MESServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.CompositeType> GetDataUsingDataContractAsync(MESClient.MESServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int GetDiff(int a, int b) {
            return base.Channel.GetDiff(a, b);
        }
        
        public System.Threading.Tasks.Task<int> GetDiffAsync(int a, int b) {
            return base.Channel.GetDiffAsync(a, b);
        }
        
        public MESClient.MESServiceReference.Department[] GetDepartments() {
            return base.Channel.GetDepartments();
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.Department[]> GetDepartmentsAsync() {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public MESClient.MESServiceReference.ProductAvailability[] GetDepartmentAvailability(MESClient.MESServiceReference.Department department) {
            return base.Channel.GetDepartmentAvailability(department);
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.ProductAvailability[]> GetDepartmentAvailabilityAsync(MESClient.MESServiceReference.Department department) {
            return base.Channel.GetDepartmentAvailabilityAsync(department);
        }
        
        public MESClient.MESServiceReference.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public MESClient.MESServiceReference.Team[] GetTeams() {
            return base.Channel.GetTeams();
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.Team[]> GetTeamsAsync() {
            return base.Channel.GetTeamsAsync();
        }
        
        public int AddProduct(int productId, int departmentId) {
            return base.Channel.AddProduct(productId, departmentId);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(int productId, int departmentId) {
            return base.Channel.AddProductAsync(productId, departmentId);
        }
        
        public int DeleteProduct(int productAvailabilityId) {
            return base.Channel.DeleteProduct(productAvailabilityId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProductAsync(int productAvailabilityId) {
            return base.Channel.DeleteProductAsync(productAvailabilityId);
        }
        
        public int DeleteProducts(int[] productIds) {
            return base.Channel.DeleteProducts(productIds);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProductsAsync(int[] productIds) {
            return base.Channel.DeleteProductsAsync(productIds);
        }
        
        public int TakeProduct(int productAvailabilityId, int teamId) {
            return base.Channel.TakeProduct(productAvailabilityId, teamId);
        }
        
        public System.Threading.Tasks.Task<int> TakeProductAsync(int productAvailabilityId, int teamId) {
            return base.Channel.TakeProductAsync(productAvailabilityId, teamId);
        }
        
        public int TakeProducts(int[] productIds, int teamId) {
            return base.Channel.TakeProducts(productIds, teamId);
        }
        
        public System.Threading.Tasks.Task<int> TakeProductsAsync(int[] productIds, int teamId) {
            return base.Channel.TakeProductsAsync(productIds, teamId);
        }
        
        public MESClient.MESServiceReference.Movement[] GetInputMovements(MESClient.MESServiceReference.Department department) {
            return base.Channel.GetInputMovements(department);
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.Movement[]> GetInputMovementsAsync(MESClient.MESServiceReference.Department department) {
            return base.Channel.GetInputMovementsAsync(department);
        }
        
        public MESClient.MESServiceReference.Movement[] GetOutputMovements(MESClient.MESServiceReference.Department department) {
            return base.Channel.GetOutputMovements(department);
        }
        
        public System.Threading.Tasks.Task<MESClient.MESServiceReference.Movement[]> GetOutputMovementsAsync(MESClient.MESServiceReference.Department department) {
            return base.Channel.GetOutputMovementsAsync(department);
        }
        
        public int GiveProduct(int[] productAvailabilityIds, int teamId, int newProductId) {
            return base.Channel.GiveProduct(productAvailabilityIds, teamId, newProductId);
        }
        
        public System.Threading.Tasks.Task<int> GiveProductAsync(int[] productAvailabilityIds, int teamId, int newProductId) {
            return base.Channel.GiveProductAsync(productAvailabilityIds, teamId, newProductId);
        }
        
        public string InitDb() {
            return base.Channel.InitDb();
        }
        
        public System.Threading.Tasks.Task<string> InitDbAsync() {
            return base.Channel.InitDbAsync();
        }
    }
}
